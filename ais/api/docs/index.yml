---
swagger: '2.0'
################################################################################
#                              API Information                                 #
################################################################################
info:
  title: AIS API
  version: v1
  contact:
    name: Tom Swanson
    email: Tom.Swanson@Phila.gov
  description: |

    The Beta version of the AIS API is an exciting step forward towards
    expanding the internal use of AIS.

    Once you've
    [obtained a developer key](http://developer.phila.gov/keys/request?endpoint=ais-v1) it's easy
    to start requesting data from AIS.

    All endpoints are only accessible via https and are located at
    `api.phila.gov/ais/v1/`.


    ## API Usage

      # [Authentication](#Authentication)

      # [Queries](#Queries)

      # [Response Structure & Metadata](#Response Structure & Metadata)

      ### Authentication

      Currently AIS is only designated for internal use.  Internal users must request an API key.

      ### Queries

      **Endpoints**

      The API endpoints are:

      * [Search](#Search) - http://api.phila.gov/ais/v1/search

      * [Owner](#Owner) - http://api.phila.gov/ais/v1/owner

      * [Addresses](#Addresses) - http://api.phila.gov/ais/v1/addresses


    **Limits**

      There is a 80 character maximum limit allowed for queries including querystring paramters. Currently batch queries are not supported.


    ## Structure

    ### The Envelope
    Every response is contained by an envelope. That is, each response has a
    predictable set of keys with which you can expect to interact:
    ```json
    {
        "meta": {
            "search_type": "",
        },
        "pagination": {
            "page": "1",
            "page_count": "15",
              "total_size": "3",
        },
        "data": {
          ...
        },
      }
    ```

    #### META
    The meta key is used to communicate extra information about the response to
    the developer. If all goes well, you'll only ever see a code key with value
    200. However, sometimes things go wrong, and in that case you might see a
    response like:
    ```json
    {
        "meta": {
            "error_type": "OAuthException",
            "code": 400,
            "error_message": "..."
        }
    }
    ```

    #### DATA
    The data key is the meat of the response. It may be a list or dictionary,
    but either way this is where you'll find the data you requested.
    #### PAGINATION
    Sometimes you just can't get enough. For this reason, we've provided a
    convenient way to access more data in any request for sequential data.
    Simply call the url in the next_url parameter and we'll respond with the
    next set of data.
    ```json
    {
        ...
        "pagination": {
            "next_url": "https://api.instagram.com/v1/tags/puppy/media/recent?access_token=fb2e77d.47a0479900504cb3ab4a1f626d174d2d&max_id=13872296",
            "next_max_id": "13872296"
        }
    }
    ```
    On views where pagination is present, we also support the "count" parameter.
    Simply set this to the number of items you'd like to receive. Note that the
    default values should be fine for most applications - but if you decide to
    increase this number there is a maximum value defined on each endpoint.
    ```


################################################################################
#                  Host, Base Path, Schemes and Content Types                  #
################################################################################
# This is your document metadata
host: api.phila.gov
basePath: /ais/v1
schemes: [http]
produces:
  - application/json
consumes:
  - application/json

################################################################################
#                                           Paths                              #
################################################################################
paths:
  /search/{search}:
    x-summary: AIS query
     # This is a HTTP operation
    get:
      # Describe this verb here. Note: you can use markdown
      description: |
        Searches AIS for addresses relating to the query.
        The /search endpoint handles a variety of search types, including:


          * **address** - Represents a particular address -
          [http://api.phila.gov/ais/v1/search/1234 market st](http://api.phila.gov/ais/v1/search/1234%20market%20st)


          * **address range** - Represents all addresses within a particular address range; inputted as a range of addresses followed by street name (with predirection). This search type is currently under development.
           [http://api.phila.gov/ais/v1/search/1200-1234 Market St](http://api.phila.gov/ais/v1/search/1200-1234%20Market%20St)


           * **block** - Represents all addresses on a particular block; inputted as range of addresses follewed by 'block of' and then street name (with predirection) -
            [http://api.phila.gov/ais/v1/search/1200-1299 block of Market St](http://api.phila.gov/ais/v1/search/1200-1299%20block%20of%20Market%20St)


           * **intersection** - Inputted as 'n street 1 and street 2', including predirections, i.e.
            [http://api.phila.gov/ais/v1/search/N 12th and Market St](http://api.phila.gov/ais/v1/search/N%2012th%20and%20Market%20St)


           * **OPA account number** - Office of Property Assessment Account Number -
            http://api.phila.gov/ais/v1/search/883309050


           * **Regmap ID** - This is the Department of Records Registry Map ID -
            http://api.phila.gov/ais/v1/search/001S07-0144
      # This is array of GET operation parameters:
      parameters:
        - $ref: '#/parameters/search'
        - $ref: '#/parameters/srid'
        - $ref: '#/parameters/include_units'
        - $ref: '#/parameters/opa_only'
        - $ref: '#/parameters/on_curb'
        - $ref: '#/parameters/on_street'
        - $ref: '#/parameters/parcel_geocode_location'
      responses:
        # Response code
        200:
          description: Successful response
  /owner/{owner}:
    x-summary: AIS query
     # This is a HTTP operation
    get:
      # Describe this verb here. Note: you can use markdown
      description: |
        The /owner endpoint handles a variety of search typesis a resource which handles queries of owner names, retrieving addresses that have owner names matching the query. Queries are treated as substrings of owner names. You can search for multiple substrings by separating search terms by spaces:
        * Request properties owned by anyone whose first or last name contains "Poe" - http://api.phila.gov/ais/v1/owner/Poe
        * Request properties owned by anyone whose first or last name contains "Phil" AND whose first or last name contains "Lee" (both conditions must be met) - [http://api.phila.gov/ais/v1/owner/Phil Lee](http://api.phila.gov/ais/v1/owner/phil%20lee)
      # This is array of GET operation parameters:
      parameters:
        - $ref: '#/parameters/owner'

      responses:
        # Response code
        200:
          description: Successful response
  /addresses/{address}:
    x-summary: AIS query
     # This is a HTTP operation
    get:
      # Describe this verb here. Note: you can use markdown
      description: |
        The original AIS endpoint designed to work with [Property Search.](http://property.phila.gov/)
          * This endpoint is being depreciated and replaced by the search endpoint.
          * [http://api.phila.gov/ais/v1/addresses/1234 market st](http://api.phila.gov/ais/v1/search/1234%20market%20st)
      parameters:
        - $ref: '#/parameters/address'
        - $ref: '#/parameters/include_units'
        - $ref: '#/parameters/opa_only'

      responses:
        # Response code
        200:
          description: Successful response
################################################################################
#                                  Security                                    #
################################################################################
#Authentication
# securityDefinitions:
#   # oauth:
#   #   type: oauth2
#   #   flow: implicit
#   #   authorizationUrl: https://instagram.com/oauth/authorize/?client_id=CLIENT-ID&redirect_uri=REDIRECT-URI&response_type=token
#   #   scopes:
#   #     basic: |
#   #     to read any and all data related to a user (e.g. following/followed-by
#   #       lists, photos, etc.) (granted by default)
#   #     comments: to create or delete comments on a user’s behalf
#   #     relationships: to follow and unfollow users on a user’s behalf
#   #     likes: to like and unlike items on a user’s behalf
#   key:
#     type: apiKey
#     in: query
#     name: access_token
# security:
#   # - oauth:
#   #   - basic
#   #   - comments
#   #   - relationships
#   #   - likes
#   - key: []
################################################################################
#                                  Tags                                         #
################################################################################
tags:
  - search
################################################################################
#                                  Parameters                                    #
################################################################################
parameters:
  srid:
    name: srid
    in: query
    description: Specifies that the geometry of the address object be returned as coordinates of a particular projection, represented by a numeric SRID/EPSG. (i.e. http://spatialreference.org/ref/)
    type: string
    default: '32618'
    required: false
  include_units:
    name: include_units
    in: query
    description: Requests that units contained within a given property be returned along with the top-level property.
    type: boolean
    default: false
    required: false
  opa_only:
    name: opa_only
    in: query
    description: Filters results to contain only addresses that have OPA account numbers.
    type: boolean
    default: false
    required: false
  on_curb:
    name: on_curb
    in: query
    description: Specifies that the geometry of the response be the best geocode type on the curb in front of the parcel.
    type: boolean
    default: false
    required: false
  on_street:
    name: on_street
    in: query
    description: Specifies that the geometry of the response be the best geocode type on the street in front of the parcel.
    type: boolean
    default: false
    required: false
  parcel_geocode_location:
    name: parcel_geocode_location
    in: query
    description: Requests that a feature for [each type of address geocode geometry](#geocode_type) be returned.
    type: boolean
    default: false
    required: false
  search:
    name: search
    in: path
    description: The querystring
    type: string
    default: '1234 market St'
    required: true
  owner:
    name: owner
    in: path
    description: The owner name
    type: string
    default: 'Phil Lee'
    required: true
  address:
    name: address
    in: path
    description: The address
    type: string
    default: '1234 Market St'
    required: true


################################################################################
#                                 Definitions                                  #
################################################################################
definitions:
  Address:
    type: object
    properties:
      type:
        type: string
      ais_feature_type:
        type: string
      match_type:
        type: string
      properties:
        type: object
        properties:
          street_address:
            type: string
          address_low:
            type: integer
          address_low_suffix:
            type: string
          address_low_frac:
            type: string
          address_high:
            type: integer
          street_predir:
            type: string
          street_name:
            type: string
          street_suffix:
            type: string
          street_postdir:
            type: string
          unit_type:
            type: string
          unit_num:
            type: string
          street_full:
            type: string
          street_code:
            type: integer
          seg_id:
            type: integer
          zip_code:
            type: string
          zip_4:
            type: string
          usps_bldgfirm:
            type: string
          usps_type:
            type: string
          election_block_id:
            type: string
          election_precinct:
            type: string
          pwd_parcel_id:
            type: string
          dor_parcel_id:
            type: string
          li_address_key:
            type: string
          pwd_account_nums:
            type: array
            items:
              type: string
          opa_account_num:
            type: string
          opa_owners:
            type: array
            items:
              type: string
          opa_address:
            type: string
          center_city_district:
            type: string
          cua_zone:
            type: string
          li_district:
            type: string
          philly_rising_area:
            type: string
          census_tract_2010:
            type: string
          census_block_group_2010:
            type: string
          census_block_2010:
            type: string
          council_district_2016:
            type: string
          political_ward:
            type: string
          political_division:
            type: string
          planning_district:
            type: string
          elementary_school:
            type: string
          middle_school:
            type: string
          high_school:
            type: string
          zoning:
            type: string
          poice_division:
            type: string
          police_district:
            type: string
          police_service_area:
            type: string
          rubbish_recycle_day:
            type: string
          recycling_diversion_rate:
            type: string
          leaf_collection_area:
            type: string
          sanitation_area:
            type: string
          sanitation_district:
            type: string
          historic_street:
            type: string
          highway_district:
            type: string
          highway_section:
            type: string
          highway_subsection:
            type: string
          traffic_district:
            type: string
          traffic_pm_district:
            type: string
          street_light_route:
            type: string
          pwd_maint_district:
            type: string
          pwd_pressure_district:
            type: string
          pwd_treatment_plant:
            type: string
          pwd_water_plate:
            type: string
          pwd_center_city_district:
            type: string
      geometry:
        type: object
        properties:
          geocode_type:
            type: string
          type:
            type: string
          coordinates:
            type: array
            items:
              type: string

  Intersection:
    type: object
    properties:
      type:
        type: string
      ais_feature_type:
        type: string
      match_type:
        type: string
      properties:
        type: object
        properties:
          street_1:
            type: object
            properties:
              street_code:
                type: string
              street_full:
                type: string
              street_name:
                type: string
              street_postdir:
                type: string
              street_suffix:
                type: string
          street_2:
            type: object
            properties:
              street_code:
                type: string
              street_full:
                type: string
              street_name:
                type: string
              street_postdir:
                type: string
              street_suffix:
                type: string


